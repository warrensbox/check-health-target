# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
        - image: docker:17.05.0-ce-git
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Install dependencies
            command: |
              apk add --no-cache \
                py-pip=9.0.0-r1
              pip install \
                docker-compose==1.12.0 \
                awscli==1.11.76
        - restore_cache:
            keys:
              - v1-{{ .Branch }}
            paths:
              - /caches/app.tar
        - run:
            name: Load Docker image layer cache
            command: |
              set +o pipefail
              docker load -i /caches/app.tar | true
        - run:
            name: Build application Docker image
            command: |
              docker build --cache-from=app -t app .
        - run:
            name: Save Docker image layer cache
            command: |
              mkdir -p /caches
              docker save -o /caches/app.tar app
        - save_cache:
            key: v1-{{ .Branch }}-{{ epoch }}
            paths:
              - /caches/app.tar
        - run:
            name: Run tests
            command: |
              docker-compose -f ./docker-compose.test.yml up
        - deploy:
            name: Push application Docker image
            command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                docker ps
                # login="$(aws ecr get-login)"
                # ${login}
                # docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
                # docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
              fi

  # build:
  #   docker:
  #     - image: circleci/golang:1.13

  #   working_directory: /go/src/github.com/warrensbox/health-check

  #   steps:
  #     - checkout
  #     - run: 
  #         command: |    
  #           set +e  
            # echo "Building website" 
            # sudo apt-get install python3
            # sudo apt-get install python3-pip
            # pip3 install mkdocs-material
            # cd www
            # mkdocs gh-deploy --force
            # cd ..
            # echo "Building application" 
            # go get -v -t -d ./...
            # go vet -tests=false ./...
            # go test -v ./...
            # mkdir -p build
            # go build -v -o build/health-check
  # release:
  #   docker:
  #     - image: circleci/golang:1.15

  #   working_directory: /go/src/github.com/warrensbox/health-check

  #   steps:
  #     - checkout
  #     - run: 
  #         command: |
  #           set +e   
  #           source version
  #           export RELEASE_VERSION; 
  #           RELEASE_VERSION=$RELEASE_VERSION.${CIRCLE_BUILD_NUM}
  #           export RELEASE_VERSION;
  #           echo $RELEASE_VERSION
  #           mkdir -p /home/circleci/bin
  #           export PATH="/home/warrensbox/bin:${PATH}"
  #           rm -rf dist
  #           git config user.email "warren.veerasingam@gmail.com"
  #           git config user.name "warrensbox"
  #           git tag -a ${RELEASE_VERSION} -m "Release Version"
  #           git push origin ${RELEASE_VERSION}
  #           curl -sL https://git.io/goreleaser | bash
  release:
    docker:
      - image: alpine:3.10

    working_directory: /go/src/github.com/warrensbox/health-check

    steps:
      - checkout
      - run: 
          command: |
            set +e 
            apk add --update docker openrc 
            rc-update add docker boot 
            docker build -t docker-alpine .

    
workflows:
  version: 2

  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
      - release:
          requires:
            - build
          filters:
            branches:
              only: 
              - release