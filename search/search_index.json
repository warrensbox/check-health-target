{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Target Group Health Checker The health-check command-line tool concurrently checks all target groups' health status (for target groups that are attached to a load balancer).","title":"AWS Target Group Health Checker"},{"location":"#aws-target-group-health-checker","text":"The health-check command-line tool concurrently checks all target groups' health status (for target groups that are attached to a load balancer).","title":"AWS Target Group Health Checker"},{"location":"How-it-works/","text":"How it works This command line tool only queries all target group that is attached to a load balancer. Given an ecs cluster is provided, it concurrently checks for the health status for all target groups in that cluster. If a target groups shows at least 1 healthy task, it will return the check while other target groups health checks are concurrently going on. This way, instead of using a loop to check each target group health status - one after another, we can minimize the time by checking all the target groups' health concurrently. The total wait time for the results would be the number of attempts X delay time (in seconds) . The program will not exit with error code 1 unless you pass the -e flag for any unhealthy targets.","title":"How it works"},{"location":"How-it-works/#how-it-works","text":"This command line tool only queries all target group that is attached to a load balancer. Given an ecs cluster is provided, it concurrently checks for the health status for all target groups in that cluster. If a target groups shows at least 1 healthy task, it will return the check while other target groups health checks are concurrently going on. This way, instead of using a loop to check each target group health status - one after another, we can minimize the time by checking all the target groups' health concurrently. The total wait time for the results would be the number of attempts X delay time (in seconds) . The program will not exit with error code 1 unless you pass the -e flag for any unhealthy targets.","title":"How it works"},{"location":"Install/","text":"Installation health-check is available for MacOS and Linux based operating systems. Homebrew Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/health-check Linux Installation for other linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/health-check/release/install.sh | bash Docker docker pull warrensbox/health-check:latest or docker pull docker.pkg.github.com/warrensbox/health-check/health-check:latest Install from source Alternatively, you can install the binary from source here","title":"Install"},{"location":"Install/#installation","text":"health-check is available for MacOS and Linux based operating systems.","title":"Installation"},{"location":"Install/#homebrew","text":"Installation for MacOS is the easiest with Homebrew. If you do not have homebrew installed, click here . brew install warrensbox/tap/health-check","title":"Homebrew"},{"location":"Install/#linux","text":"Installation for other linux operation systems. curl -L https://raw.githubusercontent.com/warrensbox/health-check/release/install.sh | bash","title":"Linux"},{"location":"Install/#docker","text":"docker pull warrensbox/health-check:latest or docker pull docker.pkg.github.com/warrensbox/health-check/health-check:latest","title":"Docker"},{"location":"Install/#install-from-source","text":"Alternatively, you can install the binary from source here","title":"Install from source"},{"location":"Quick-start/","text":"How to use Pass your ecs-cluster name You must always provide the ecs-cluster on the command-line Optionally, you can provide the delay option to delay in-between checks Optionally, you can also provide the attempts option for the number of attempts for the health check Use the -e option to exit with 1 when unhealthy You you provide the -e flag, the program will exit with exit code 1 if any of the target is unhealthy This is useful for continuous delivery - Jenkins, CircleCI and others Likewise, if you dont't provide the -e flag, the program will simply exit with exit code 0 if any of the target is unhealthy Use the -b option to disable progress bar On jenkins you may not want the progress bar to be printed out as it prints out the progress line by line. You can use the -b option to disable progress bar. By default, it prints the progress bar. With Docker docker run --rm \\ -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \\ -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \\ -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \\ -e AWS_REGION=${AWS_REGION} \\ -e AWS_DEFAULT_REGION=${AWS_REGION} \\ health-check --ecs-cluster esp-devops --attempts 50 --delay 2 ## pass -b to disable progress bar on jenkins","title":"Quick start"},{"location":"Quick-start/#how-to-use","text":"","title":"How to use"},{"location":"Quick-start/#pass-your-ecs-cluster-name","text":"You must always provide the ecs-cluster on the command-line Optionally, you can provide the delay option to delay in-between checks Optionally, you can also provide the attempts option for the number of attempts for the health check","title":"Pass your ecs-cluster name"},{"location":"Quick-start/#use-the-e-option-to-exit-with-1-when-unhealthy","text":"You you provide the -e flag, the program will exit with exit code 1 if any of the target is unhealthy This is useful for continuous delivery - Jenkins, CircleCI and others Likewise, if you dont't provide the -e flag, the program will simply exit with exit code 0 if any of the target is unhealthy","title":"Use the -e option to exit with 1 when unhealthy"},{"location":"Quick-start/#use-the-b-option-to-disable-progress-bar","text":"On jenkins you may not want the progress bar to be printed out as it prints out the progress line by line. You can use the -b option to disable progress bar. By default, it prints the progress bar.","title":"Use the -b option to disable progress bar"},{"location":"Quick-start/#with-docker","text":"docker run --rm \\ -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \\ -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \\ -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \\ -e AWS_REGION=${AWS_REGION} \\ -e AWS_DEFAULT_REGION=${AWS_REGION} \\ health-check --ecs-cluster esp-devops --attempts 50 --delay 2 ## pass -b to disable progress bar on jenkins","title":"With Docker"}]}